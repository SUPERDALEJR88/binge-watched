{"ast":null,"code":"import { types, flow } from 'mobx-state-tree';\nimport { ViewStore } from './ViewStore';\nimport { User } from './User';\nimport { getUsers, addUser } from '../api/User';\nexport const GlobalStore = types.model('GlobalStore', {\n  viewStore: ViewStore,\n  users: types.array(User)\n}).actions(self => ({\n  loadSelf() {\n    self.viewStore = ViewStore.create({\n      isMobile: true,\n      width: 0,\n      currentPage: 'Home'\n    });\n    self.getUsers();\n  },\n\n  loadUsers(response) {\n    self.users = [];\n    const {\n      users\n    } = response;\n    users.forEach(user => {\n      let newUser = User.create();\n      newUser.setUserName(user.userName);\n      newUser.setFirstName(user.firstName);\n      newUser.setLastName(user.lastName);\n      self.users.push(newUser);\n    });\n  },\n\n  getUsers: flow(function* getUsers() {\n    let response;\n\n    try {\n      response = yield getUsers();\n      self.loadUsers(response);\n    } catch (error) {\n      let message = error;\n    }\n  }),\n  addUser: flow(function* addUser(firstName, lastName, userName) {\n    let response;\n\n    try {\n      response = yield addUser(firstName, lastName, userName);\n\n      if (response !== undefined) {\n        self.users.push({\n          firstName,\n          lastName,\n          userName\n        });\n      }\n\n      yield self.getUsers();\n    } catch (error) {\n      let message = error;\n    }\n  })\n}));","map":{"version":3,"sources":["/Users/nathan/Documents/src/binge-watched/client/src/models/GlobalStore.js"],"names":["types","flow","ViewStore","User","getUsers","addUser","GlobalStore","model","viewStore","users","array","actions","self","loadSelf","create","isMobile","width","currentPage","loadUsers","response","forEach","user","newUser","setUserName","userName","setFirstName","firstName","setLastName","lastName","push","error","message","undefined"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AAEA,OAAO,MAAMC,WAAW,GAAGN,KAAK,CAC7BO,KADwB,CAClB,aADkB,EACH;AACpBC,EAAAA,SAAS,EAAEN,SADS;AAEpBO,EAAAA,KAAK,EAAET,KAAK,CAACU,KAAN,CAAYP,IAAZ;AAFa,CADG,EAKxBQ,OALwB,CAKfC,IAAD,KAAW;AAClBC,EAAAA,QAAQ,GAAG;AACTD,IAAAA,IAAI,CAACJ,SAAL,GAAiBN,SAAS,CAACY,MAAV,CAAiB;AAChCC,MAAAA,QAAQ,EAAE,IADsB;AAEhCC,MAAAA,KAAK,EAAE,CAFyB;AAGhCC,MAAAA,WAAW,EAAE;AAHmB,KAAjB,CAAjB;AAKAL,IAAAA,IAAI,CAACR,QAAL;AACD,GARiB;;AASlBc,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClBP,IAAAA,IAAI,CAACH,KAAL,GAAa,EAAb;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAYU,QAAlB;AACAV,IAAAA,KAAK,CAACW,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAIC,OAAO,GAAGnB,IAAI,CAACW,MAAL,EAAd;AACAQ,MAAAA,OAAO,CAACC,WAAR,CAAoBF,IAAI,CAACG,QAAzB;AACAF,MAAAA,OAAO,CAACG,YAAR,CAAqBJ,IAAI,CAACK,SAA1B;AACAJ,MAAAA,OAAO,CAACK,WAAR,CAAoBN,IAAI,CAACO,QAAzB;AACAhB,MAAAA,IAAI,CAACH,KAAL,CAAWoB,IAAX,CAAgBP,OAAhB;AACD,KAND;AAOD,GAnBiB;;AAoBlBlB,EAAAA,QAAQ,EAAEH,IAAI,CAAC,UAAUG,QAAV,GAAqB;AAClC,QAAIe,QAAJ;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAG,MAAMf,QAAQ,EAAzB;AACAQ,MAAAA,IAAI,CAACM,SAAL,CAAeC,QAAf;AACD,KAHD,CAGE,OAAOW,KAAP,EAAc;AACd,UAAIC,OAAO,GAAGD,KAAd;AACD;AACF,GARa,CApBI;AA6BlBzB,EAAAA,OAAO,EAAEJ,IAAI,CAAC,UAAUI,OAAV,CAAkBqB,SAAlB,EAA6BE,QAA7B,EAAuCJ,QAAvC,EAAiD;AAC7D,QAAIL,QAAJ;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAG,MAAMd,OAAO,CAACqB,SAAD,EAAYE,QAAZ,EAAsBJ,QAAtB,CAAxB;;AACA,UAAIL,QAAQ,KAAKa,SAAjB,EAA4B;AAC1BpB,QAAAA,IAAI,CAACH,KAAL,CAAWoB,IAAX,CAAgB;AAACH,UAAAA,SAAD;AAAYE,UAAAA,QAAZ;AAAsBJ,UAAAA;AAAtB,SAAhB;AACD;;AACD,YAAMZ,IAAI,CAACR,QAAL,EAAN;AACD,KAND,CAME,OAAO0B,KAAP,EAAc;AACd,UAAIC,OAAO,GAAGD,KAAd;AACD;AACF,GAXY;AA7BK,CAAX,CALgB,CAApB","sourcesContent":["import { types, flow } from 'mobx-state-tree';\nimport { ViewStore } from './ViewStore';\nimport { User } from './User';\nimport { getUsers, addUser } from '../api/User';\n\nexport const GlobalStore = types\n  .model('GlobalStore', {\n    viewStore: ViewStore,\n    users: types.array(User),\n  })\n  .actions((self) => ({\n    loadSelf() {\n      self.viewStore = ViewStore.create({\n        isMobile: true,\n        width: 0,\n        currentPage: 'Home',\n      })\n      self.getUsers()\n    },\n    loadUsers(response) {\n      self.users = []\n      const { users } = response\n      users.forEach((user) => {\n        let newUser = User.create()\n        newUser.setUserName(user.userName)\n        newUser.setFirstName(user.firstName)\n        newUser.setLastName(user.lastName)\n        self.users.push(newUser)\n      })\n    },\n    getUsers: flow(function* getUsers() {\n      let response\n      try {\n        response = yield getUsers()\n        self.loadUsers(response)\n      } catch (error) {\n        let message = error\n      }\n    }),\n    addUser: flow(function* addUser(firstName, lastName, userName) {\n      let response\n      try {\n        response = yield addUser(firstName, lastName, userName)\n        if (response !== undefined) {\n          self.users.push({firstName, lastName, userName})\n        }\n        yield self.getUsers()\n      } catch (error) {\n        let message = error\n      }\n    })\n  }));\n"]},"metadata":{},"sourceType":"module"}