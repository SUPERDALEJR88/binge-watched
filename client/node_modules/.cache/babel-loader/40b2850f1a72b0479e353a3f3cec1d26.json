{"ast":null,"code":"import { types } from 'mobx-state-tree';\nimport { ViewStore } from './ViewStore';\nimport { User } from './User';\nimport { getUsers } from '../api/User';\nexport const GlobalStore = types.model('GlobalStore', {\n  viewStore: ViewStore,\n  users: types.array(User)\n}).actions(self => ({\n  async loadSelf() {\n    self.viewStore = ViewStore.create();\n    await self.loadUsers();\n  },\n\n  loadUsers() {\n    self.users = [];\n    const users = self.getUsers();\n    users.forEach(user => {\n      let newUser = User.create();\n      newUser.setUserName(user.userName);\n      newUser.setFirstName(user.firstName);\n      newUser.setLastName(user.lastName);\n      self.users.push(newUser);\n    });\n  },\n\n  async getUsers() {\n    return await getUsers();\n  }\n\n}));","map":{"version":3,"sources":["/Users/nathan/Documents/src/binge-watched/client/src/models/GlobalStore.js"],"names":["types","ViewStore","User","getUsers","GlobalStore","model","viewStore","users","array","actions","self","loadSelf","create","loadUsers","forEach","user","newUser","setUserName","userName","setFirstName","firstName","setLastName","lastName","push"],"mappings":"AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,KAAK,CAC7BK,KADwB,CAClB,aADkB,EACH;AACpBC,EAAAA,SAAS,EAAEL,SADS;AAEpBM,EAAAA,KAAK,EAAEP,KAAK,CAACQ,KAAN,CAAYN,IAAZ;AAFa,CADG,EAKxBO,OALwB,CAKfC,IAAD,KAAW;AAClB,QAAMC,QAAN,GAAiB;AACfD,IAAAA,IAAI,CAACJ,SAAL,GAAiBL,SAAS,CAACW,MAAV,EAAjB;AACA,UAAMF,IAAI,CAACG,SAAL,EAAN;AACD,GAJiB;;AAKlBA,EAAAA,SAAS,GAAG;AACVH,IAAAA,IAAI,CAACH,KAAL,GAAa,EAAb;AACA,UAAMA,KAAK,GAAGG,IAAI,CAACP,QAAL,EAAd;AACAI,IAAAA,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAIC,OAAO,GAAGd,IAAI,CAACU,MAAL,EAAd;AACAI,MAAAA,OAAO,CAACC,WAAR,CAAoBF,IAAI,CAACG,QAAzB;AACAF,MAAAA,OAAO,CAACG,YAAR,CAAqBJ,IAAI,CAACK,SAA1B;AACAJ,MAAAA,OAAO,CAACK,WAAR,CAAoBN,IAAI,CAACO,QAAzB;AACAZ,MAAAA,IAAI,CAACH,KAAL,CAAWgB,IAAX,CAAgBP,OAAhB;AACD,KAND;AAOD,GAfiB;;AAgBlB,QAAMb,QAAN,GAAiB;AACf,WAAO,MAAMA,QAAQ,EAArB;AACD;;AAlBiB,CAAX,CALgB,CAApB","sourcesContent":["import { types } from 'mobx-state-tree';\nimport { ViewStore } from './ViewStore';\nimport { User } from './User';\nimport { getUsers } from '../api/User';\n\nexport const GlobalStore = types\n  .model('GlobalStore', {\n    viewStore: ViewStore,\n    users: types.array(User),\n  })\n  .actions((self) => ({\n    async loadSelf() {\n      self.viewStore = ViewStore.create()\n      await self.loadUsers()\n    },\n    loadUsers() {\n      self.users = []\n      const users = self.getUsers()\n      users.forEach((user) => {\n        let newUser = User.create()\n        newUser.setUserName(user.userName)\n        newUser.setFirstName(user.firstName)\n        newUser.setLastName(user.lastName)\n        self.users.push(newUser)\n      })\n    },\n    async getUsers() {\n      return await getUsers()\n    }\n  }));\n"]},"metadata":{},"sourceType":"module"}