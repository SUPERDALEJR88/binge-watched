{"ast":null,"code":"var pathToRegexp = require('path-to-regexp');\n\nvar createError = require('http-errors');\n\nmodule.exports = function (options) {\n  options = options || {};\n  return function (path) {\n    var keys = [];\n    var re = pathToRegexp(path, keys, options);\n    return function (pathname, params) {\n      var m = re.exec(pathname);\n      if (!m) return false;\n      params = params || {};\n      var key, param;\n\n      for (var i = 0; i < keys.length; i++) {\n        key = keys[i];\n        param = m[i + 1];\n        if (!param) continue;\n        params[key.name] = decodeParam(param);\n        if (key.repeat) params[key.name] = params[key.name].split(key.delimiter);\n      }\n\n      return params;\n    };\n  };\n};\n\nfunction decodeParam(param) {\n  try {\n    return decodeURIComponent(param);\n  } catch (_) {\n    throw createError(400, 'failed to decode param \"' + param + '\"');\n  }\n}","map":{"version":3,"sources":["/Users/nathan/Documents/src/binge-watched/client/node_modules/path-match/index.js"],"names":["pathToRegexp","require","createError","module","exports","options","path","keys","re","pathname","params","m","exec","key","param","i","length","name","decodeParam","repeat","split","delimiter","decodeURIComponent","_"],"mappings":"AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,SAAO,UAAUC,IAAV,EAAgB;AACrB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,EAAE,GAAGR,YAAY,CAACM,IAAD,EAAOC,IAAP,EAAaF,OAAb,CAArB;AAEA,WAAO,UAAUI,QAAV,EAAoBC,MAApB,EAA4B;AACjC,UAAIC,CAAC,GAAGH,EAAE,CAACI,IAAH,CAAQH,QAAR,CAAR;AACA,UAAI,CAACE,CAAL,EAAQ,OAAO,KAAP;AAERD,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AAEA,UAAIG,GAAJ,EAASC,KAAT;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCF,QAAAA,GAAG,GAAGN,IAAI,CAACQ,CAAD,CAAV;AACAD,QAAAA,KAAK,GAAGH,CAAC,CAACI,CAAC,GAAG,CAAL,CAAT;AACA,YAAI,CAACD,KAAL,EAAY;AACZJ,QAAAA,MAAM,CAACG,GAAG,CAACI,IAAL,CAAN,GAAmBC,WAAW,CAACJ,KAAD,CAA9B;AACA,YAAID,GAAG,CAACM,MAAR,EAAgBT,MAAM,CAACG,GAAG,CAACI,IAAL,CAAN,GAAmBP,MAAM,CAACG,GAAG,CAACI,IAAL,CAAN,CAAiBG,KAAjB,CAAuBP,GAAG,CAACQ,SAA3B,CAAnB;AACjB;;AAED,aAAOX,MAAP;AACD,KAhBD;AAiBD,GArBD;AAsBD,CAzBD;;AA2BA,SAASQ,WAAT,CAAqBJ,KAArB,EAA4B;AAC1B,MAAI;AACF,WAAOQ,kBAAkB,CAACR,KAAD,CAAzB;AACD,GAFD,CAEE,OAAOS,CAAP,EAAU;AACV,UAAMrB,WAAW,CAAC,GAAD,EAAM,6BAA6BY,KAA7B,GAAqC,GAA3C,CAAjB;AACD;AACF","sourcesContent":["\nvar pathToRegexp = require('path-to-regexp');\nvar createError = require('http-errors');\n\nmodule.exports = function (options) {\n  options = options || {};\n\n  return function (path) {\n    var keys = [];\n    var re = pathToRegexp(path, keys, options);\n\n    return function (pathname, params) {\n      var m = re.exec(pathname);\n      if (!m) return false;\n\n      params = params || {};\n\n      var key, param;\n      for (var i = 0; i < keys.length; i++) {\n        key = keys[i];\n        param = m[i + 1];\n        if (!param) continue;\n        params[key.name] = decodeParam(param);\n        if (key.repeat) params[key.name] = params[key.name].split(key.delimiter)\n      }\n\n      return params;\n    }\n  }\n}\n\nfunction decodeParam(param) {\n  try {\n    return decodeURIComponent(param);\n  } catch (_) {\n    throw createError(400, 'failed to decode param \"' + param + '\"');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}