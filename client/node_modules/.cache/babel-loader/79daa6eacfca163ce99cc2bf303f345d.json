{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Documents/src/binge-watched/src/containers/App.js\";\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport Mobile from './Mobile';\nimport Desktop from './Desktop';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n  updateWindowDimensions() {\n    const {\n      store\n    } = this.props;\n    const {\n      viewStore\n    } = store;\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (this.state.width < 800) {\n      this.setState({\n        isMobile: true\n      });\n      viewStore.setIsMobile(true);\n    } else {\n      this.setState({\n        isMobile: false\n      });\n      viewStore.setIsMobile(false);\n    }\n  }\n\n  render() {\n    const {\n      router,\n      views\n    } = this.props;\n    const {\n      isMobile\n    } = this.state;\n\n    if (isMobile) {\n      return /*#__PURE__*/React.createElement(Mobile, {\n        router: router,\n        views: views,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Desktop, {\n      router: router,\n      views: views,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default observer(App);","map":{"version":3,"sources":["/Users/nathan/Documents/src/binge-watched/src/containers/App.js"],"names":["React","observer","Mobile","Desktop","App","Component","constructor","props","state","width","window","innerWidth","height","innerHeight","updateWindowDimensions","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","store","viewStore","setState","isMobile","setIsMobile","render","router","views"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,KAAb;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,sBAAL;AACAJ,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkC,KAAKH,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAAlC;AACD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBR,IAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAArC;AACD;;AAEDD,EAAAA,sBAAsB,GAAG;AACvB,UAAM;AAAEM,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAgBD,KAAtB;AAEA,SAAKE,QAAL,CAAc;AAAEb,MAAAA,KAAK,EAAEC,MAAM,CAACC,UAAhB;AAA4BC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAA3C,KAAd;;AACA,QAAI,KAAKL,KAAL,CAAWC,KAAX,GAAmB,GAAvB,EAA4B;AAC1B,WAAKa,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAF,MAAAA,SAAS,CAACG,WAAV,CAAsB,IAAtB;AACD,KAHD,MAGO;AACL,WAAKF,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAF,MAAAA,SAAS,CAACG,WAAV,CAAsB,KAAtB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB,KAAKpB,KAA/B;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAe,KAAKf,KAA1B;;AAEA,QAAIe,QAAJ,EAAc;AACZ,0BAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEG,MAAhB;AAAwB,QAAA,KAAK,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBAAO,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAED,MAAjB;AAAyB,MAAA,KAAK,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxC+B;;AA4ClC,eAAe1B,QAAQ,CAACG,GAAD,CAAvB","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport Mobile from './Mobile';\nimport Desktop from './Desktop';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { width: window.innerWidth, height: window.innerHeight };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n  updateWindowDimensions() {\n    const { store } = this.props;\n    const { viewStore } = store;\n\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    if (this.state.width < 800) {\n      this.setState({ isMobile: true });\n      viewStore.setIsMobile(true);\n    } else {\n      this.setState({ isMobile: false });\n      viewStore.setIsMobile(false);\n    }\n  }\n\n  render() {\n    const { router, views } = this.props;\n    const { isMobile } = this.state;\n\n    if (isMobile) {\n      return <Mobile router={router} views={views} />\n    }\n\n    return <Desktop router={router} views={views} />\n  }\n\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}